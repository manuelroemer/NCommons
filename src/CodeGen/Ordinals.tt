<#+
public string Ordinal(int n) {
    // Method from: https://stackoverflow.com/a/20175/10018492
    if (n < 0) {
        throw new ArgumentOutOfRangeException("The nber must be greater than 0.");
    }

    if(n <= 0 ) return n.ToString();

    switch(n % 100)
    {
        case 11:
        case 12:
        case 13:
            return n + "th";
    }

    switch(n % 10)
    {
        case 1:
            return n + "st";
        case 2:
            return n + "nd";
        case 3:
            return n + "rd";
        default:
            return n + "th";
    }
}

public string LongOrdinal(int n) {
    if (n < 0) {
        throw new ArgumentOutOfRangeException("The nber must be greater than 0.");
    }

    // The templates in this project don't go beyond 8, so this is good enough.
    return new[] {
        "", "First", "Second", "Third", "Fourth", "Fifth", "Sixth", "Seventh", "Eigth",
    }[n];
}

public string LowerLongOrdinal(int n) {
    return LongOrdinal(n).ToLowerInvariant();
}
#>
