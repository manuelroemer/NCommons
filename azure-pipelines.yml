trigger:
- master

name: $(SourceBranchName)_$(Date:yyyy-MM-dd)_$(Rev:.r)

pool:
  vmImage: 'windows-2019'

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreInstaller@0
  displayName: Install .NET Core 3.0 Preview
  inputs:
    packageType: 'sdk'
    version: '3.0.100-preview3-010431'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Run Tests
  inputs:
    command: test
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
  condition: succeeded()

- script: dotnet pack src --no-build --output $(Build.ArtifactStagingDirectory) --configuration $(buildConfiguration)
  displayName: NuGet - Pack Projects
  condition: |
    and
    (
      succeeded(),
      eq(variables['Build.SourceBranch'], 'refs/heads/master'),
      eq(variables['system.pullrequest.isfork'], false)
    )

- script: nuget pack src/NCommons -OutputDirectory $(Build.ArtifactStagingDirectory)
  displayName: NuGet - Pack Metapackage
  condition: |
    and
    (
      succeeded(),
      eq(variables['Build.SourceBranch'], 'refs/heads/master'),
      eq(variables['system.pullrequest.isfork'], false)
    )

- task: NuGetCommand@2
  displayName: NuGet - Publish Packages
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: 'NuGet.org'
    versioningScheme: off
  condition: |
    and
    (
      succeeded(),
      eq(variables['Build.SourceBranch'], 'refs/heads/master'),
      eq(variables['system.pullrequest.isfork'], false)
    )
